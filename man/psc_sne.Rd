% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/psc_sne.R
\name{psc_sne}
\alias{psc_sne}
\title{Polyspherical Cauchy SNE}
\usage{
psc_sne(X, d, rho_psc_list = NULL, rho = 0.5, perplexity = 30,
  maxit = 1000, initial_momentum = 0.5, final_momentum = 0.8,
  eta = 200, early_exaggeration = 4, colors = NULL, show_prog = 100,
  tol = 1e-06, parallel_cores = parallel::detectCores() - 1,
  init = c("equispaced", "random")[1])
}
\arguments{
\item{X}{an array of size \code{c(n, d + 1, r)} with the polyspherical data,
where \code{n} is the number of observations, \code{d} is the dimension of
each sphere, and \code{r} is the number of spheres.}

\item{d}{the target dimension to use for the reduced data of \code{X}.}

\item{rho_psc_list}{rho parameters of the high-dimensional polyspherical
Cauchy probabilities. Multiple types of parameters are allowed,
distinguishing three scenarios. The first one when the type of the parameter
is a list, then it contains the vector \code{rho_values} and the matrix
\code{P}, the second scenario when the type is a vector, then this object
contains the rho values, within this function the
\code{\link{high_dimension}} function is called to get the \matrix{P}.
The last scenario that is when this object is set to \code{NULL}, i.e., the
\code{\link{rho_optim_bst}} function is called to get the rho values
(given a fixed perplexity) and the probabilities matrix. Optional parameter,
defaults to \code{NULL}).}

\item{rho}{parameter of the low-dimensional spherical Cauchy
probabilities. Optional, defaults to \code{0.5}).}

\item{perplexity}{parameter that measures the number of neighbors to
use when mapping between high- and low-dimension. Defaults to \code{30}).}

\item{maxit}{maximum number of iterations. Defaults to \code{1e3}).}

\item{initial_momentum}{first value of the momentum of the first \code{250}
iterations. Defaults to \code{0.5}.}

\item{final_momentum}{momentum to take into account after the \code{250}
iteration. Defaults to \code{0.8}.}

\item{eta}{is the learning rate of the optimization algorithm. Optional
param, defaults to \code{200}.}

\item{early_exaggeration}{the first \code{100} iterations results are
exaggerated by this factor. Optional parameter, defaults to \code{4.0}).}

\item{colors}{list with as many elements as observations are, only valid
when visualization is true. Optional parameter, defaults to \code{NULL}).}

\item{show_prog}{defines the number of iterations skipped when reporting
the progress. Defaults to \code{100}, i.e., only multiples of \code{100}
are reported, otherwise the closer multiple of \code{100} is taking into
account. \code{show_prog} also controls the frequency a plot is shown:
after \code{2 * show_prog} iterations. If \code{FALSE}, no progress is
shown at all.}

\item{tol}{is the tolerance, when is below this value it is considered that
a good solution has been obtained. Defaults to \code{1e-6}).}

\item{parallel_cores}{number of cores to use concurrently for the
calculation of the gradient. Defaults to \code{parallel::detectCores() - 1},
that means that uses the total number of cores of the computer except one of
them.}

\item{init}{is a parameter to indicate how to proceed with the initialization
of the resultant reduced dimension object. There are two possible ways:
\code{equispaced} (evenly spaced points in the circumference/sphere) or
\code{random} (random points generated uniformly). Defaults to
\code{equispaced}.}
}
\value{
Resulting data reduced to \eqn{\mathcal{S}^d} after applying the
algorithm for the total number of iterations selected.
}
\description{
Calculates the polyspherical-Cauchy SNE given a data onto the
polysphere and the reduced dimension.
}
\examples{
X <- sphunif::r_unif_sph(40, 3, 3)
psc_sne(X, d = 1, parallel_cores = 2, maxit = 1e4)
psc_sne(X, d = 2, parallel_cores = 2)
}
